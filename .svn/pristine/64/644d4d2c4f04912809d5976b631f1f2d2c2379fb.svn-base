package com.boc.model;
// Generated Jun 23, 2016 11:37:27 AM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * DocumentTypeBase generated by hbm2java
 */
@Entity
@Table(name = "DOCUMENT_TYPE_BASE", schema = "WFCONFIG", uniqueConstraints = @UniqueConstraint(columnNames = "DOCUMENT_TYPE"))
public class DocumentTypeBase implements java.io.Serializable {

	private int did;
	private String documentType;
	private Set<ProductDocumentChecklistMapping> productDocumentChecklistMappings = new HashSet<ProductDocumentChecklistMapping>(
			0);
	private Set<SecurityTypeDocumentChecklistMapping> securityTypeDocumentChecklistMappings = new HashSet<SecurityTypeDocumentChecklistMapping>(
			0);

	public DocumentTypeBase() {
	}

	public DocumentTypeBase(int did, String documentType) {
		this.did = did;
		this.documentType = documentType;
	}

	public DocumentTypeBase(int did, String documentType,
			Set<ProductDocumentChecklistMapping> productDocumentChecklistMappings,
			Set<SecurityTypeDocumentChecklistMapping> securityTypeDocumentChecklistMappings) {
		this.did = did;
		this.documentType = documentType;
		this.productDocumentChecklistMappings = productDocumentChecklistMappings;
		this.securityTypeDocumentChecklistMappings = securityTypeDocumentChecklistMappings;
	}

	@Id

	@Column(name = "DID", unique = true, nullable = false)
	public int getDid() {
		return this.did;
	}

	public void setDid(int did) {
		this.did = did;
	}

	@Column(name = "DOCUMENT_TYPE", unique = true, nullable = false, length = 100)
	public String getDocumentType() {
		return this.documentType;
	}

	public void setDocumentType(String documentType) {
		this.documentType = documentType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documentTypeBase")
	public Set<ProductDocumentChecklistMapping> getProductDocumentChecklistMappings() {
		return this.productDocumentChecklistMappings;
	}

	public void setProductDocumentChecklistMappings(
			Set<ProductDocumentChecklistMapping> productDocumentChecklistMappings) {
		this.productDocumentChecklistMappings = productDocumentChecklistMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documentTypeBase")
	public Set<SecurityTypeDocumentChecklistMapping> getSecurityTypeDocumentChecklistMappings() {
		return this.securityTypeDocumentChecklistMappings;
	}

	public void setSecurityTypeDocumentChecklistMappings(
			Set<SecurityTypeDocumentChecklistMapping> securityTypeDocumentChecklistMappings) {
		this.securityTypeDocumentChecklistMappings = securityTypeDocumentChecklistMappings;
	}

}
